[
   {
    "title": "GOATOOLS GO Grouping",
    "short-desc": "Given a python command line program called GOATOOLS, my task was to build a web interface that would make the program more accessible for biologists doing Gene Ontology Enrichment Analysis. This was the most challenging project I have worked on to date since it required me to use a language that I was not familiar with and also required me to write some code for the backend.",
    "img-base": "assets/img/goatools-results-download",
    "img-alt": "Screenshot of the GOATOOLS project",
    "intro-desc": "After expressing my interest in working on this paper/project, I spent some time playing around with the program for which I was to build an interface. As I explored the program it became clear to me that more than front-end code was going to be required of me.",
    "main-desc": "I first researched basic python web interfaces and wrote a very simple CGI script to be sure that I could complete this project. After getting the CGI script working, it was obvious to me that this was going to be a cumbersome solution if the project required much more than had been accomplished. After settling on a framework, I spent a day going through the Django tutorial. Finally I was able to refactor the code to operate in Django.",
    "outro-desc": "Having accomplished the necessary backend code, I was able to focus on the Front-end work for which I have studied. With a deadline of 1-2 weeks before the contributing authors would be expecting to see the interface, I called on Bootstrap to get a basic usable site going. The next step is to get this onto a viable webhost rather than the virtual machine that I have been running.",
    "intro-pic": "assets/img/goatools-readme",
    "intro-pic-alt": "GOATOOLS readme screenshot",
    "main-pic": "assets/img/goatools-form-filled",
    "main-pic-alt": "Screenshot of the web interface main page",
    "outro-pic": "assets/img/goatools-results-download",
    "outro-pic-alt": "Screenshot of the results after calling the server",
    "long-desc": "",
    "date-completed": "Aug-Sep 2016",
    "url": "",
    "tech-used": "python, Django, Javascript, HTML, CSS, Bootstrap, Vagrant, Virtualbox, SQLite, git, Github"
  },{
    "title": "Dapper Goose Website",
    "short-desc": "The primary goal for this site was to keep it simple. A new restaurant for which the owners moved to a new city implied that the site would change very quickly so I focused only on the information that would be of the utmost importance.",
    "img-base": "assets/img/dapper-goose",
    "img-alt": "Screenshot of the 'Dapper-goose' website",
    "intro-desc": "The primary goal for this site was to keep it simple. A new restaurant for which the owners moved to a new city implied that the site would change very quickly. New opportunities and unexpected market trends all but guaranteed that the site would have to change quickly so I focused only on the information that would be of the utmost importance.",
    "main-desc": "I decided that the menu was of primary importance so I hard-coded the menu information into the HTML and used Javascript to only show the relevant menu. This provided for a very quick display when the user changed the menu. The next most important information was of course location and contact info, but since it was a new restaurant, I highlighted the Owner and Chef first. Because this information was less important but higher on the page, I hid the details about the owners until the user expresses interest by clicking to see them.",
    "outro-desc": "Unfortunately, in a rush to secure their domain name, the owner hastily signed up with Squarespace. Despite receiving good feedback on the initial development, I was unable to continue gratis development due to the maintenance requirements due to Squarespace platform updates.",
    "intro-pic": "assets/img/dapper-goose",
    "intro-pic-alt": "Image of the Dapper Goose website",
    "main-pic": "assets/img/dapper-goose-menu-1",
    "main-pic-alt": "Image of the Dapper Goose website",
    "outro-pic": "assets/img/dapper-goose-menu-2",
    "outro-pic-alt": "Image of the Dapper Goose website",
    "long-desc": "",
    "date-completed": "June 2016",
    "url": "Buffalo-Site",
    "tech-used": "Yeoman, Bootstrap, Jquery, Javascript, HTML, CSS"
  },{
    "title": "Neighborhood Map",
    "short-desc": "Web application that finds points of interest in my neighborhood using Google Maps. The application also makes AJAX calls to the Foursquare, Wikipedia, and Google Places API’s to provied information relevant to the locations that are found. This was build using knockout.js for data-binding. ",
    "img-base": "assets/img/NeighborhoodMap",
    "img-alt": "Screenshot of my Neighborhood Map project",
    "intro-desc": "The first thing that I had to do was get Google Maps working in my site. Reading through the documentation, I was able to write the functions required to place markers, create the info window, etc. I then wrote the necessary functions to query the Wikipedia and Foursquare API’s for information related to a given location.",
    "main-desc": "With the calls for data taken care of, it was time to start binding the data to the view. Knockout.js uses a viewModel to do this. I started to write the Constructors for places, wikis, details, etc. With the constructors written I could include data in the HTML layout.",
    "outro-desc": "After getting the data to show up in the view, I was able to add additional functionality such as autocomplete, bouncing the selected marker, review modal and other minor visual touches. This project showed how frameworks can speed development if you know them well.",
    "intro-pic": "assets/img/NeighborhoodMap",
    "intro-pic-alt": "Initial screen of the application",
    "main-pic": "assets/img/NeighborhoodMap-info-window",
    "main-pic-alt": "Info window open after location click",
    "outro-pic": "assets/img/NeighborhoodMap-Modal",
    "outro-pic-alt": "Review modal image",
    "long-desc": "",
    "date-completed": "Feb 2016",
    "url": "Neighborhood-Map",
    "tech-used": "HTML, CSS, Knockout.js, AJAX, Various APIs"
  },{
    "title": "Frogger Clone",
    "short-desc": "A game that is based on the classic arcade game, Frogger, which I built as part of my Nanodegree program on Udacity.com. I was given a game engine and assets. It was my job to write Object Oriented code to provide player, enemy, and gem logic. The game was built using Javascript and HTML canvas.",
    "img-base": "assets/img/frogger",
    "img-alt": "Screenshot of my Frogger Clone",
    "intro-desc": "Given an engine as well as assets, I was expected to make a working clone of the game 'Frogger'. While wrapping my head around the engine loop at first was discouraging, I enventually understood what was happening and the significance of RequestAnimationLoop.",
    "main-desc": "Once I understood what was happening in the game engine, I focused on the logic of game elements. Using Object Oriented Programming, there were classes (enemies, gems, and the player) which could inherit a single placement method. I then added methods that were unique to each of the classes. For example, the player needs a method to add a life and to add to the score.",
    "outro-desc": "After getting the classes written, I decided to add the Start and End screens. I used HTML canvas to generate the screens and localstorage to keep track of an individual's scores. If I were to continue developing this game in the future, I would want to write functions that called a database, either in the cloud or on a server.",
    "intro-pic": "assets/img/frogger-start",
    "intro-pic-alt": "Game's start screen",
    "main-pic": "assets/img/frogger",
    "main-pic-alt": "Game being played",
    "outro-pic": "assets/img/frogger-end",
    "outro-pic-alt": "Game's end screen",
    "long-desc": "",
    "date-completed": "Nov 2015",
    "url": "Frogger-Clone",
    "tech-used": "HTML Canvas, Javascript, TODO"
  },{
    "title": "Mobile Portfolio",
    "short-desc": "Part of the Front-End Nanodegree at Udacity.com focuses on performance. I was given a complete site that performed woefully and was expected to optimize the site to load as fast as possible. The site started with a Page Speed Insights score of 28 for mobile and I was able to improve this to 95.",
    "img-base": "assets/img/MobilePortfolio",
    "img-alt": "Screenshot of my Mobile Portfolio project",
    "intro-desc": "Speed is a very important aspect of any website and this page was SLOW! Using Chrome’s developer tools, I was able to find a number of functions that were taking far too long.",
    "main-desc": "Having found the problem functions, I analyzed the code in those functions and fixed the problems. A few functions were calling expensive DOM querying methods within a loop. Simply by moving these methods out of the loop performance was improved.",
    "outro-desc": "After fixing the biggest problems, I found smaller issues to improve as well. These included changing .innerHTML calls to .innerText and other minor improvements.",
    "intro-pic": "assets/img/MobilePortfolio-psi-before",
    "intro-pic-alt": "Initial Page Speed score",
    "main-pic": "assets/img/MobilePortfolio",
    "main-pic-alt": "Site's main page",
    "outro-pic": "assets/img/MobilePortfolio-psi-after",
    "outro-pic-alt": "Final Page Speed score",
    "long-desc": "",
    "date-completed": "Dec 2015",
    "url": "Mobile-Portfolio",
    "tech-used": "Javascript refactoring"
  },{
    "title": "Resume Project",
    "short-desc": "A website to showcase my skills. This served as my introduction to Javascript at Udacity.com. Having learned the basics of HTML and CSS, it was time to learn the power of JQuery.",
    "img-base": "assets/img/Resume",
    "img-alt": "Screenshot of my resume project",
    "intro-desc": "The first step in this project was to create JSON objects to represent my education, employment, and project history.",
    "main-desc": "With the JSON objects that I wrote, and the HTML snippets with placeholders that were given to me, the next step was to write display functions. I used string replacement to put the appropriate information in place of the placeholder.",
    "outro-desc": "Finally, I added a google map that showed the locations where I have worked as well as some JQuery animations to make it nice.",
    "intro-pic": "assets/img/Resume-work",
    "intro-pic-alt": "Screenshot of resume site",
    "main-pic": "assets/img/Resume-projects",
    "main-pic-alt": "Screenshot of resume site",
    "outro-pic": "assets/img/Resume-education",
    "outro-pic-alt": "Screenshot of resume site",
    "long-desc": "",
    "date-completed": "Oct 2015",
    "url": "Resume",
    "tech-used": "HTML, CSS, Javascript, JQuery"
  },{
    "title": "Portfolio Site",
    "short-desc": "A very basic portfolio site that was built using purely HTML and CSS. The focus of this was to learn the basics of responsive design and use my newly acquired HTML/CSS knowledge. I used srcset to provide appropriate sized images depending on the device that is viewing the site as well as SVG icons for beautiful scaling.",
    "img-base": "assets/img/Portfolio",
    "img-alt": "Screenshot of my first portfolio site",
    "intro-desc": "The first thing that I had to do in this project was to create the HTML structure based on a PDF file that was given to me. Once the HTML was in place, I wrote CSS using flexbox to place all of the elements according to the PDF file.",
    "main-desc": "Once the layout was looking very close to the PDF, I added responsive features such as the srcset attribute to select the appropriate file size for the user’s browser. I also used SVG icons so icons with scale nicely to any viewport size.",
    "outro-desc": "Finally I used grunt to automate the resizing of all images to the sizes that I specified with srcset.",
    "intro-pic": "assets/img/Portfolio-narrow",
    "intro-pic-alt": "Screenshot of portfolio in narrow viewport",
    "main-pic": "assets/img/Portfolio-medium",
    "main-pic-alt": "Screenshot of portfolio in medium viewport",
    "outro-pic": "assets/img/Portfolio-wide",
    "outro-pic-alt": "Screenshot of portfolio in wide viewport",
    "long-desc": "",
    "date-completed": "Sept 2015",
    "url": "Portfolio",
    "tech-used": "HTML, CSS, Grunt"
  }
]
